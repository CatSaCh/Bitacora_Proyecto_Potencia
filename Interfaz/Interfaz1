import tkinter as tk
from PIL import Image, ImageTk

class RobotControlApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Control del Robot Seguidor de Línea")
        self.root.configure(bg="black")  # Fondo negro para la ventana

        

        # Cargar la imagen del robot usando Pillow
        self.robot_image = Image.open("robot.png")
        self.robot_photo = ImageTk.PhotoImage(self.robot_image)
        self.robot_label = tk.Label(root, image=self.robot_photo, bg="black")
        self.robot_label.grid(row=0, column=0, columnspan=4, pady=10)

        # Estilo de los botones
        button_style = {"width": 10, "height": 2, "bg": "red", "fg": "white", "font": ("Helvetica", 12, "bold")}

        # Botón de inicio
        self.start_button = tk.Button(root, text="START", command=self.start_robot, **button_style)
        self.start_button.grid(row=1, column=0, padx=10, pady=10)

        # Botones de control de velocidad
        self.speed_up_button = tk.Button(root, text="SPEED +", command=self.increase_speed, **button_style)
        self.speed_up_button.grid(row=1, column=1, padx=10, pady=10)

        self.speed_down_button = tk.Button(root, text="SPEED -", command=self.decrease_speed, **button_style)
        self.speed_down_button.grid(row=1, column=2, padx=10, pady=10)

        # Botón de paro
        self.stop_button = tk.Button(root, text="STOP", command=self.stop_robot, **button_style)
        self.stop_button.grid(row=1, column=3, padx=10, pady=10)

        # Etiqueta para mostrar la velocidad actual
        self.speed_label = tk.Label(root, text="Velocidad: 0", bg="black", fg="white", font=("Helvetica", 14, "bold"))
        self.speed_label.grid(row=2, column=0, columnspan=4, pady=10)

        self.speed = 0

        #Selector de opciones v-Rojo
    def option_selection(self):
        opciones = ["Cambio", "Freno", "Retroceso"]
        opcion_seleccionada = tk.StringVar(root)
        opcion_seleccionada.set("Freno")
        menu = tk.OptionMenu(root, opcion_seleccionada, *opciones, command=mostrar_opcion)
        

    def start_robot(self):
        # Aquí iría el código para iniciar el robot
        print("Robot iniciado")
        self.animate_button(self.start_button)

    def stop_robot(self):
        # Aquí iría el código para parar el robot
        print("Robot parado")
        self.animate_button(self.stop_button)

    def increase_speed(self):
        if self.speed < 100:
            self.speed += 10
            self.update_speed_label()
        print(f"Velocidad aumentada a {self.speed}")
        self.animate_button(self.speed_up_button)

    def decrease_speed(self):
        if self.speed > 0:
            self.speed -= 10
            self.update_speed_label()
        print(f"Velocidad disminuida a {self.speed}")
        self.animate_button(self.speed_down_button)

    def update_speed_label(self):
        self.speed_label.config(text=f"Velocidad: {self.speed}")

    def animate_button(self, button):
        original_color = button.cget("background")
        button.config(background="yellow")
        self.root.after(100, lambda: button.config(background=original_color))

if __name__ == "__main__":
    root = tk.Tk()
    app = RobotControlApp(root)
    root.mainloop()
